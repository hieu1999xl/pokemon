{"version":3,"file":"static/js/400.ae7f1cbf.chunk.js","mappings":"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","sources":["module-pokemon/pages/my-pokemon/components/ModalConfirm.tsx","module-pokemon/pages/my-pokemon/index.tsx"],"sourcesContent":["import { Modal } from '../../../../components';\nimport { Dialog } from '@headlessui/react';\nimport { ExclamationTriangleIcon } from '@heroicons/react/24/outline';\nimport { formatUpperCaseFirstLetter } from '../../../../helpers/utils';\n\ninterface ModalConfirmProps {\n  openModal: boolean;\n  setModal: (open: boolean) => void;\n  pokemonRelease?: string;\n  handleReleasePokemon: (isAll: boolean, name: string) => void;\n}\n\nconst ModalConfirm = ({ openModal, setModal, pokemonRelease = '', handleReleasePokemon }: ModalConfirmProps) => {\n  return (\n    <Modal openModal={openModal} onClose={() => setModal(false)}>\n      <div className=\"\">\n        <div className=\"modal-delete\">\n          <div className=\"modal-delete--content\">\n            <Dialog.Title as=\"h3\" className=\"modal-delete--text\">\n              Delete {formatUpperCaseFirstLetter(pokemonRelease)}\n            </Dialog.Title>\n            <div className=\"mt2\">\n              <p className=\"modal-delete--subtext\">\n                {pokemonRelease ? (\n                  <>Are you sure you want to delete this pokemon? It will be lost in the My pokemon</>\n                ) : (\n                  <>Are you sure you want to delete ALL the pokemon? It will be lost in the My pokemon</>\n                )}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-delete--btn\">\n        <button\n          type=\"button\"\n          className=\"waves-effect waves-light btn-small\"\n          onClick={() => handleReleasePokemon(!pokemonRelease ? true : false, pokemonRelease)}\n        >\n          OK\n        </button>\n        <button\n          type=\"button\"\n          className=\"waves-effect waves-light btn-small  grey  mr2\"\n          onClick={() => setModal(false)}\n        >\n          Cancel\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ModalConfirm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { IMAGE_URL, ROUTES } from '../../constants';\nimport { useNavigate, useParams } from 'react-router';\nimport { NotFound } from '../../../components';\nimport { releasePokemon } from '../../services/redux';\nimport { useState } from 'react';\nimport ModalConfirm from './components/ModalConfirm';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { useSearchParams } from 'react-router-dom';\nimport { PokemonResponse } from '../../types';\n\nconst MyPokemon = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const releasePokemonAllParam = searchParams.get('releaseAll');\n\n  const [openModal, setOpenModal] = useState(false);\n  const [pokemonRelease, setPokemonRelease] = useState<string>();\n\n  const { pokemonCaught } = useSelector((state: RootState) => ({\n    pokemonCaught: state?.pokemon?.data.pokemonCaught,\n  }));\n\n  const navigateDetail = (name: string) => {\n    navigate(`/${ROUTES.DETAIL}/${name}`);\n  };\n\n  const handleReleasePokemon = (isAll = false, pokeName: string) => {\n    dispatch(releasePokemon({ isAll: isAll, name: pokeName }));\n    setOpenModal(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col s12 offset-l2 m12 l6\">\n          <div className=\"\">\n            <div className=\"\">\n              <div className=\"\">\n                {pokemonCaught && pokemonCaught.length > 0 ? (\n                  <table className=\"min-w-full\">\n                    <thead className=\"border-b\">\n                      <tr>\n                        <th scope=\"col\" className=\"\">\n                          My Pokemon\n                        </th>\n                        <th scope=\"col\" className=\"\"></th>\n                        <th scope=\"col\" className=\"\"></th>\n                        {releasePokemonAllParam && (\n                          <th scope=\"col\" className=\"\">\n                            <button\n                              onClick={() => {\n                                setOpenModal(true);\n                              }}\n                              className=\"\"\n                            >\n                              <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                strokeWidth=\"1.5\"\n                                stroke=\"currentColor\"\n                                className=\"w-6 h-6\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                                />\n                              </svg>\n                            </button>\n                          </th>\n                        )}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {pokemonCaught.map((item: PokemonResponse, idx: number) => (\n                        <tr className=\"tr-pokemon\" key={JSON.stringify(item)}>\n                          <td className=\"\">{idx + 1}</td>\n                          <td\n                            className=\"\"\n                            onClick={() => navigateDetail(item.generalInformation.name)}\n                          >\n                            <div className=\"\">\n                              <LazyLoadImage width={90}\n                                src={`${IMAGE_URL}/${item.id}.png`}\n                                alt={`${item.generalInformation.name}`}\n                              />\n                            </div>\n                          </td>\n                          <td className=\"\">\n                            <div>\n                              <div style={{fontWeight: 900}}>{item.generalInformation.name}</div>\n                              <div className=\"\">{item.nameOwner}</div>\n                            </div>\n                          </td>\n                          <td className=\"\">\n                            <button\n                              onClick={() => {\n                                setOpenModal(true);\n                                setPokemonRelease(item.generalInformation.name);\n                              }}\n                              className=\"waves-effect waves-light btn button-mypokemon\"\n                            >\n                              <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                fill=\"none\"\n                                color='#fff'\n                                width=\"1.5rem\"\n                                viewBox=\"0 0 24 24\"\n                                strokeWidth=\"1.5\"\n                                stroke=\"currentColor\"\n                                className=\"w-6 h-6\"\n                              >\n                                <path\n                                  strokeLinecap=\"round\"\n                                  strokeLinejoin=\"round\"\n                                  d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                                />\n                              </svg>\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                ) : (\n                  <NotFound />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalConfirm\n        openModal={openModal}\n        setModal={setOpenModal}\n        pokemonRelease={pokemonRelease}\n        handleReleasePokemon={handleReleasePokemon}\n      />\n    </div>\n  );\n};\n\nexport default MyPokemon;\n"],"names":["openModal","setModal","pokemonRelease","handleReleasePokemon","onClose","className","as","formatUpperCaseFirstLetter","type","onClick","navigate","useNavigate","dispatch","useDispatch","useSearchParams","searchParams","releasePokemonAllParam","get","useState","setOpenModal","setPokemonRelease","pokemonCaught","useSelector","state","pokemon","data","length","scope","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","map","item","idx","name","generalInformation","ROUTES","LazyLoadImage","width","src","IMAGE_URL","id","alt","style","fontWeight","nameOwner","color","JSON","stringify","isAll","pokeName","releasePokemon"],"sourceRoot":""}